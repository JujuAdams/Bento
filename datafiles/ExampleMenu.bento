build BentoRectangle {
	xywh = ["50%", "50%", "40%", "90%"]

	eventAnimationEnter = fn {
		AnimateY(-1000, 70, 30, acBack)
	}

	build BentoTextButton {
		label = "Docs"
		origin = [0, 0]
		xywh = [10, 10, 50, 40]

		eventClick = fn {
			url_open("https://www.jujuadams.com/Bento/")
		}
	}

	build BentoTextButton {
		label = "?"
		origin = [1, 0]
		xywh = [parent.width-10, 10, 40, 40]

		eventClick = fn {
			build BentoLayer {
				behaviour = BENTO_BEHAVIOR_MODAL

				build BentoRectangle {
					fillColor = make_color_rgb(20, 20, 20)
					fillAlpha = 0.7
					ltrb = ["60%", 0, "100%", "100%"]

					eventAnimationEnter = fn {
						AnimateX(width, 45, 0, acExpo)
					}

					eventAnimationExit = fn {
						AnimateX(width, 30, 0, acExpoInv)
					}

					var header = build BentoText {
						xy = ["50%", 30]
						label = "Welcome to Bento " + BENTO_VERSION + "!"
					}

					var footer = build BentoTextWrap {
						width = parent.width - 30
						label = "Thank you for taking a look at Bento,\nand good luck with your games!"
						Trim()
						originY = 1
						xy = ["50%", parent.height-30]
					}

					build BentoTextWrap {
						ltrb = [60, header.bottom + 30, parent.width-20, footer.top-30]
						hAlign = "left"
						vAlign = "middle"
						label = "Bento is a UI framework for GameMaker LTS 2022 made by Juju Adams, with a ton of help from Katsaii and other members of The GameMaker Kitchen Discord server.\n\nUI building has always been very challenging in GameMaker. A lot of libraries have been written over the years to tackle the problem but they've typically been a collection of widgets rather than a holistic *system* that manages user input, layering, animation, and layout. Bento prioritises solving this systemic challenge.\n\nHere are a few things Bento makes easier:\n\n- UI can be laid out and edited without having to recompile the game\n\n- Template UI elements can be extended and customised to meet your needs\n\n- Native build-in / build-out animation system\n\n- Native gamepad/keyboard support, including navigation hinting\n\n- Surface-based scroll boxes\n\n- In-depth layering system, including support for modals"
					}

					build BentoTextButton {
						label = "X"
						origin = [0, 0.5]
						xywh = [0, "50%", 40, 40]

						eventClick = fn {
							LayerAnimationExit()
						}
					}
				}
			}
		}
	}

	var header = build BentoText {
		xy = ["50%", 30]
		label = "Welcome to Bento " + BENTO_VERSION + "!"
	}

	var scrollBox = build BentoScrollBox {

		xywh = ["50%", "50%", "100%", "100%"]
		top = header.bottom + 20

		eventDraw = fn {
			draw_rectangle(drawLeft, drawTop, drawRight, drawBottom, true)
		}

		LayoutAsVerticalList("center", 20)

		build BentoTextButton {
			label = "Buttons"
			margin = 20

			eventClick = fn {
				build BentoLayer {
					behavior = BENTO_BEHAVIOR_BLOCKING
					FileExecute("ExampleButtons.bento")
				}
			}
		}

		build BentoTextButton {
			label = "Sliders"
			margin = 20

			eventClick = fn {
				build BentoLayer {
					behavior = BENTO_BEHAVIOR_BLOCKING
					FileExecute("ExampleSliders.bento")
				}
			}
		}

		build BentoTextButton {
			label = "Native Layouts"
			margin = 20

			eventClick = fn {
				build BentoLayer {
					behavior = BENTO_BEHAVIOR_BLOCKING
					FileExecute("ExampleNativeLayouts.bento")
				}
			}
		}

		build BentoTextButton {
			label = "Complex Layouts"
			margin = 20

			eventClick = fn {
				build BentoLayer {
					behavior = BENTO_BEHAVIOR_BLOCKING
					FileExecute("ExampleComplexLayouts.bento")
				}
			}
		}

		build BentoTextButton {
			label = "Scroll Boxes"
			margin = 20

			eventClick = fn {
				build BentoLayer {
					behavior = BENTO_BEHAVIOR_BLOCKING
					FileExecute("ExampleScrollBoxes.bento")
				}
			}
		}

		build BentoTextButton {
			label = "Video & Sprites"
			margin = 20

			eventClick = fn {
				build BentoLayer {
					behavior = BENTO_BEHAVIOR_BLOCKING
					FileExecute("ExampleVideoAndSprites.bento")
				}
			}
		}

		build BentoTextButton {
			label = "Example: Main Menu"
			margin = 20

			eventClick = fn {
				build BentoLayer {
					behavior = BENTO_BEHAVIOR_BLOCKING
					FileExecute("ExampleMainMenu.bento")
				}
			}
		}

		build BentoTextButton {
			label = "Example: Settings"
			margin = 20

			eventClick = fn {
				build BentoLayer {
					behavior = BENTO_BEHAVIOR_BLOCKING
					FileExecute("ExampleSettings.bento")
				}
			}
		}

		build BentoTextButton {
			label = "Example: Dialogue Box"
			margin = 20

			eventClick = fn {
				build BentoLayer {
					behavior = BENTO_BEHAVIOR_BLOCKING
					FileExecute("ExampleDialogueBox.bento")
				}
			}
		}

		build BentoTextButton {
			label = "Example: Modal"
			margin = 20

			eventClick = fn {
				build BentoLayer {
					behavior = BENTO_BEHAVIOR_BLOCKING
					FileExecute("ExampleModal.bento")
				}
			}
		}

		scrollYMax = childMaxBottom
	}

	build BentoVerticalScrollbar {
		ltrb = [scrollBox.right + 10, scrollBox.top, scrollBox.right + 30, scrollBox.bottom]
		binding = scrollBox
	}
}