A basic rectangle. Useful for whiteboxing or creating semi-transparent masks. Available in .ui
scripts using the BentoRectangle builder.



# Variables

Available variables (in addition to shared UI variables) are:

| Name     | Datatype | Purpose                                                                                      |
|----------|----------|----------------------------------------------------------------------------------------------|
| name     | string   | Name of the layer                                                                            |
| volatile | boolean  | Whether the layer will be deleted if LayerSustain() is not called                            |
| priority | number   | Draw/input-handling priority for the layer. High priorities are handled first                |
| behavior | number   | Whether this layer allows subsequent layers to draw/handle input. See below for legal values |
| left     | number   | Worldspace left x-coordinate of the layer                                                    |
| top      | number   | Worldspace top y-coordinate of the layer                                                     |
| right    | number   | Worldspace right x-coordinate of the layer                                                   |
| bottom   | number   | Worldspace bottom y-coordinate of the layer                                                  |
| x        | number   | Worldspace x-coordinate in the centre of the layer                                           |
| y        | number   | Worldspace y-coordinate in the centre of the layer                                           |
| width    | number   | Worldspace width of the layer                                                                |
| height   | number   | Worldspace height of the layer                                                               |

The `.behavior` variable can take one of the following values:

| Name                       | Behaviour                                                                                                         |
|----------------------------|-------------------------------------------------------------------------------------------------------------------|
| BENTO_BEHAVIOR_DRAW_ONLY   | Doesn't receive input. Will draw and will allow input to pass through                                             |
| BENTO_BEHAVIOR_PASSTHROUGH | Receives input. Will draw and will allow input to pass through                                                    |
| BENTO_BEHAVIOR_MODAL       | Receives input and blocks subsequent layers from receiving input. Draws                                           |
| BENTO_BEHAVIOR_BLOCKING    | Receives input and blocks subsequent layers from receiving input. Draws and blocks subsequent layers from drawing |



# Methods

Layers also have the following methods:



### .MoveToTop()

Returns: <undefined>

| Argument Name | Datatype | Purpose |
|---------------|----------|---------|
| None          |          |         |

Moves the layer to the top of the host's stack, causing it to be processed and drawn first.



### .MoveOver(targetLayerName)

Returns: <undefined>

| Argument Name   | Datatype | Purpose                        |
|-----------------|----------|--------------------------------|
| targetLayerName | string   | Name of the layer to move over |

Moves the layer over the target layer. This sets the priority of the scoped layer to be the same as
the target layer.



### .BuildIn()

Returns: <undefined>

| Argument Name | Datatype | Purpose |
|---------------|----------|---------|
| None          |          |         |

Triggers (or re-triggers) the build-in animation for every child of the layer.



### .HasChildren()

Returns: <undefined>

| Argument Name | Datatype | Purpose |
|---------------|----------|---------|
| None          |          |         |

Returns whether the layer has any children.



# Variable Access

### .VariableBind(variableName, getterFunc, setterFunc)

Returns: <undefined>

| Argument Name | Datatype | Purpose                                                       |
|---------------|----------|---------------------------------------------------------------|
| variableName  | string   | Name of the variable to bind to                               |
| getterFunc    | function | Function to call when getting the value of the named variable |
| setterFunc    | function | Function to call when setting the value of the named variable |

The bindings set by this method are used by Catspeak when executing .ui scripts, and they are also
used by the .Get() and .Set() methods. Trying to use standard GML syntax to get/set variables that
have been bound using .VariableBind() will fail.



.Get(variableName)

Returns: <undefined>

| Argument Name | Datatype | Purpose                     |
|---------------|----------|-----------------------------|
| variableName  | string   | Name of the variable to get |

Executes the getter function if it exists, as set by .VariableBind(), otherwise the variable is
read directly.



.Set(variableName, value)

Returns: <undefined>

| Argument Name | Datatype | Purpose                     |
|---------------|----------|-----------------------------|
| variableName  | string   | Name of the variable to set |
| value         | any      | Value to set                |

Executes the setter function if it exists, as set by .VariableBind(), otherwise the variable is set
directly.