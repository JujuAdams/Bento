BentoLayer
  name       = Name of the layer.
  volatile   = Whether the layer will be deleted if LayerSustain() is not called.
  priority   = Draw/input-handling priority for the layer. High priorities are handled first.
  behavior = Whether this layer allows subsequent layers to draw/handle input. Must be one of
               the following values:
                 BENTO_BEHAVIOR_DRAW_ONLY
                   Doesn't receive input. Will draw and will allow input to pass through.
                 BENTO_BEHAVIOR_PASSTHROUGH
                   Receives input. Will draw and will allow input to pass through.
                 BENTO_BEHAVIOR_MODAL
                   Receives input and blocks subsequent layers from receiving input. Draws.
                 BENTO_BEHAVIOR_BLOCKING
                   Receives input and blocks subsequent layers from receiving input. Draws and
                   blocks subsequent layers from drawing.
  
  The following variables are GET-only. Layers copy the LTRB/XYWH values of the parent host.
  
  left   = Worldspace left x-coordinate of the layer
  top    = Worldspace top y-coordinate of the layer
  right  = Worldspace right x-coordinate of the layer
  bottom = Worldspace bottom y-coordinate of the layer
  x      = Worldspace x-coordinate in the centre of the layer
  y      = Worldspace y-coordinate in the centre of the layer
  width  = Worldspace width of the layer
  height = Worldspace height of the layer
  
  The following are methods for layers.
  
  Get()
    Returns the proper calculated value of a variable.
    
  Set()
    Sets a value for a variable.
  
  MoveToTop()
    Moves the layer to the top of the host's layer stack and adjusts the .priority value of the
    layer if required.
  
  MoveOver(layerName)
    Moves the layer above the given layer. The .priority value will be set equal to the target
    layer's .priority value.
  
  HasChildren()
    Returns whether the layer has children (.i.e. a root Bento box struct)
  
  BuildIn()
    Triggers build-in animation for the root struct and all child structs thereafter.